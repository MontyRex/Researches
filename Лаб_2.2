#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#define MAX_FILES 256
#define MAX_WORD_LEN 100
#define MAX_WORDS 10000

typedef struct word 
{
    int count;
    char *w;
} WORD;

WORD words[MAX_WORDS];
int num_words = 0;

int compare(const void *a, const void *b) 
{
    WORD *w1 = (WORD *)a;
    WORD *w2 = (WORD *)b;
    return strcmp(w1->w, w2->w);
}

int compare_count(const void *a, const void *b) 
{
    WORD *w1 = (WORD *)a;
    WORD *w2 = (WORD *)b;
    return w2->count - w1->count;
}

void add_word(char *w) 
{
    int i;
    for (i = 0; i < num_words; i++) 
	{
        if (strcmp(words[i].w, w) == 0) 
		{
            words[i].count++;
            return;
        }
    }
    words[num_words].count = 1;
    words[num_words].w = malloc(strlen(w) + 1);
    strcpy(words[num_words].w, w);
    num_words++;
}

void process_file(char *filename) 
{
    FILE *fp = fopen(filename, "r");
    if (fp == NULL) 
	{
        printf("Unable to open file %s\n", filename);
        return;
    }

    char line[MAX_WORD_LEN];
    while (fgets(line, MAX_WORD_LEN, fp) != NULL) 
	{
        char *word = strtok(line, " \t\n\r\f");
        while (word != NULL) 
		{
            int len = strlen(word);
            if (len > 0) {
                if (!isalpha(word[len - 1])) 
				{
                    word[len - 1] = '\0';
                }
                if (len > 1 && !isalpha(word[0])) 
				{
                    word++;
                }
                int i;
                for (i = 0; i < len; i++) 
				{
                    word[i] = tolower(word[i]);
                }
                add_word(word);
            }
            word = strtok(NULL, " \t\n\r\f");
        }
    }

    fclose(fp);
}

int main(int argc, char *argv[])
{
    if (argc < 2) 
	{
        printf("Usage: %s file1 file2 ... fileN\n", argv[0]);
        return 1;
    }
    if (argc > MAX_FILES + 1) 
	{
        printf("Too many files (maximum is %d)\n", MAX_FILES);
        return 1;
    }
	int i;
    for (i = 1; i < argc; i++) 
	{
        process_file(argv[i]);
    }

    qsort(words, num_words, sizeof(WORD), compare);

    FILE *fp1 = fopen("words_alphabetical.txt", "w");
    FILE *fp2 = fopen("words_frequency.txt", "w");
	
    for (i = 0; i < num_words; i++) 
	{
        fprintf(fp1, "%s\n", words[i].w);
    }

    qsort(words, num_words, sizeof(WORD), compare_count);
	
    for (i = 0; i < num_words; i++) 
	{
        fprintf(fp2, "%s: %d\n", words[i].w, words[i].count);
    }

    fclose(fp1);
    fclose(fp2);

    return 0;
}
